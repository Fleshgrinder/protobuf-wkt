#!/usr/bin/env bash
set -Eeuo pipefail

info() {
    printf '\033[0;32m%s\033[0m\n' "$*"
}

gh() {
    (set +x && curl -sfLSH "Authorization: bearer $GITHUB_TOKEN" -H 'application/vnd.github.v3+json' "$@")
}

readonly root_dir=$PWD
readonly build_dir="$root_dir/build"

git config user.name "${GITHUB_USER:-Fleshgrinder}"
git config user.email "${GITHUB_EMAIL:-fleshgrinder@users.noreply.github.com}"

for tarball_url in $(gh 'https://api.github.com/repos/protocolbuffers/protobuf/releases' | jq -r '.[].tarball_url | match("^.*v3\\.[0-9]+\\.[0-9]+$").string' | sort -u); do
    release=${tarball_url##*/}

    if gh --HEAD "https://api.github.com/repos/Fleshgrinder/protobuf-wkt/releases/tags/$release"; then
        info "$release already exists"
    else
        info "downloading $release..."
        release_dir="$build_dir/$release"
        mkdir -p "$release_dir"
        (
            cd "$release_dir"

            cp -r "$root_dir/.git" .git
            git checkout --orphan "$release"
            git rm -rf .

            tarball="$build_dir/$release.tar.gz"
            gh -o "$tarball" "$tarball_url"
            tar -xf "$tarball" --strip-components=2 --wildcards --no-wildcards-match-slash --exclude='*test*' '*/src/google/protobuf/*.proto'
            tar -xf "$tarball" --strip-components=1 --wildcards --no-wildcards-match-slash '*/LICENSE'

            git add .
            git commit -qm "$release"
            git push --set-upstream origin "$release"
            gh -d "{\"tag_name\":\"$release\",\"target_commitish\":\"$release\",\"name\":\"$release\"}" "https://api.github.com/repos/Fleshgrinder/protobuf-wkt/releases"

            info "created $release"
        )
    fi
done
